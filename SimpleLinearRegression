
##----------------------------------------------------------------------------------##
##--- SIMPLE LINEAR REGRESSION MODEL building ------##
##----------------------------------------------------------------------------------##


##--- Step 1: Clear environment variables ------------------------------------------##


##__________________________________________________________________________________##


##--- Step 2: Set working Directory ------------------------------------------------##

##setwd

##__________________________________________________________________________________##


##--- Step 3: Read the data from the csv file --------------------------------------##
cars_data <- read.csv("C:/Users/Amar Shilvanth/Downloads/Toyota_SimpleReg.csv",header = T)
names(cars_data)
str(cars_data)
summary(cars_data)

##_________________________________________________________________________________##


##--- Step 4: Perform Exploratory Data Analysis and Data Pre-processing-------------##
## Drop any irrelevant attribute(s):
cars_data <- cars_data[,-c(1,2)]
## Summary of the data and look for any missing values:
str(cars_data)
summary(cars_data)

## Correlation and Covariance between the attributes:

cov(cars_data) #the covariance of -59136 indicates negative correlation
plot(cars_data$Age_06_15,cars_data$Price)
plot(cars_data$Age_06_15,cars_data$Price,xlab = "age of car",ylab = "price in Rs.",pch=12,col="red")
cor(cars_data)
cor(cars_data$Age_06_15,cars_data$Price)
#Describe how the covarainace and correlation coefficients 



#Do the attributes have a good enough correlation coefficient to support linear regres  sion model building?

##__________________________________________________________________________________##


##--- Step 5: Split the data into train and test datasets --------------------------##
#Split in (train:test) in (80:20) ratio

rows <- seq(1, nrow(cars_data),1)
rows
set.seed(123)
trainRows <- sample(rows,(70*nrow(cars_data))/100)
cars_train <- cars_data[trainRows,]
cars_test <- cars_data[-trainRows,]
trainRows1 <- sample(rows,(80*nrow(cars_data))/100)
cars_train1 <- cars_data[trainRows1,]
cars_test1 <- cars_data[-trainRows1,]
##__________________________________________________________________________________##


##--- Step 6: Linear regression model building--------------------------------------##
linreg <- lm(Price~Age_06_15, data = cars_train)
linreg
summary(linreg)
coefficients(linreg)
## Summary of model:


#Extract the intercept coefficient from the linear regression model


#Extract the residual values


##__________________________________________________________________________________##


##--- Step 7: Check for validity of linear regression assumptions ------------------##
#HINT: plot the 4 graphs to check. Write your comments
par(mfrow = c(2,2))
plot(linreg)
par(mfrow = c(1,1))
plot(linreg)
##__________________________________________________________________________________##


##--- Step 8: Predict on testdata --------------------------------------------------##
test_pred <- predict(linreg,cars_data)
test_pred
plot(test_pred)
test_actual <- cars_test$Price
plot(test_actual)
`##__________________________________________________________________________________##


##--- Step 9: Error Metrics --------------------------------------------------------##
library(DMwR)

#Error verification on train data
regr.eval(cars_train$Price,linreg$fitted.values)
plot(regr.eval(cars_train$Price,linreg$fitted.values))

#Error verification on test data
regr.eval(test_actual,test_pred)
plot(regr.eval(test_actual,test_pred))

##__________________________________________________________________________________##


##--- Step 10: Confidence and Prediction Intervals----------------------------------##
#Find the confidence and prediction intervals and plot them for the WHOLE dataset
conf_pred <- data.frame(predict(linreg, cars_test, interval = "confidence", level = 0.95))
pred_pred <- data.frame(predict(linreg, cars_test, interval = "prediction",level = 0.95))
str(conf_pred)
summary(conf_pred)
plot(conf_pred)
##__________________________________________________________________________________##
#-----------------------end---------------------------------------------------------##
